{"version":3,"sources":["assets/images/beeNecklace.jpg","assets/images/chainNecklace.jpg","assets/images/blackNecklace.jpg","components/Navigation/index.jsx","App.jsx","serviceWorker.js","pages/Home/index.jsx","pages/About/index.jsx","constants/products.js","pages/Product/index.jsx","components/ProductCard/index.jsx","components/ProductList/index.jsx","pages/Products/index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","props","react_default","a","createElement","className","concat","role","react_router_dom","to","exact","App","components_Navigation","children","Boolean","window","location","hostname","match","Home","About","products","id","name","description","price","thumb","beeNecklace","blackNecklace","Object","defineProperty","chainNecklace","img","Product","params","product","find","elem","Fragment","src","ProductCard","_ref","style","backgroundImage","ProductList","map","item","components_ProductCard","Products","react_router","path","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f3f0285.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beeNecklace.ae5f60db.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chainNecklace.e9df1148.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blackNecklace.ced21cc3.jpg\";","import React from \"react\";\nimport \"./Navigation.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = props => (\n  <nav className={`${props.role}-nav`}>\n    <NavLink to=\"/\" exact>\n      Home\n    </NavLink>\n    <NavLink to=\"/about\">About</NavLink>\n    <NavLink to=\"/products\">Products</NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navigation role=\"main\" />\n      </header>\n      {props.children}\n      <footer className=\"App-footer\">\n        <Navigation role=\"footer\" />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = props => <h1>Hello Home</h1>;\n\nexport default Home;\n","import React from \"react\";\nimport \"./About.css\";\n\nconst About = props => <h1>About Us</h1>;\n\nexport default About;\n","import beeNecklace from \"../assets/images/beeNecklace.jpg\";\nimport blackNecklace from \"../assets/images/blackNecklace.jpg\";\nimport chainNecklace from \"../assets/images/chainNecklace.jpg\";\n\nconst products = [\n  {\n    id: 1,\n    name: \"Bee Necklace\",\n    description: \"Bee Necklace\",\n    price: \"£10\",\n    thumb: beeNecklace\n  },\n  {\n    id: 2,\n    name: \"Black Necklace\",\n    description: \"Black large necklace\",\n    price: \"£15\",\n    thumb: blackNecklace\n  },\n  {\n    id: 3,\n    name: \"Chain Necklace\",\n    thumb: chainNecklace,\n    description: \"Chain Necklace \",\n    price: \"10£\",\n    thumb: chainNecklace\n  },\n  { id: 4, name: \"pippi 4\", thumb: beeNecklace, description: \"Salmon socks  \" },\n  {\n    id: 5,\n    name: \"pippi 5\",\n    thumb: beeNecklace,\n    description: \"Silver ring\",\n    img:\n      \"https://tse2.mm.bing.net/th?id=OIP.xZo5pDRh--Da4505ZYbYcwHaHa&pid=Api&P=0&w=300&h=300\"\n  }\n];\n\nexport default products;\n","import React from \"react\";\nimport \"./Product.css\";\nimport products from \"../../constants/products\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Product = props => {\n  const { id } = props.match.params;\n  const product = products.find(elem => elem.id === +id);\n\n  return (\n    <>\n      <NavLink to=\"/products\">Back</NavLink>\n      <h1>Product #{id}</h1>\n      <h3>{product.name}</h3>\n      <p>{product.description}</p>\n      {product.img && <img src={product.img} />}\n    </>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport \"./ProductCard.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ProductCard = ({ product }) => (\n  <div className=\"Product-card\">\n    <NavLink to={`/products/${product.id}`}>\n      <div\n        className=\"Card-image\"\n        style={{ backgroundImage: `url(${product.thumb})` }}\n      />\n      <h3 className=\"Product-link\">{product.name}</h3>\n    </NavLink>\n    <h4 className=\"price\">{product.price}</h4>\n  </div>\n);\n\nexport default ProductCard;\n","import React from \"react\";\nimport \"./ProductList.css\";\nimport products from \"../../constants/products\";\nimport ProductCard from \"../ProductCard\";\n\nconst ProductList = props => (\n  <div className=\"products-container\">\n    {products.map(item => (\n      <ProductCard product={item} />\n    ))}\n  </div>\n);\n\nexport default ProductList;\n","import React from \"react\";\nimport \"./Products.css\";\nimport { Route } from \"react-router-dom\";\nimport Product from \"../Product\";\nimport ProductList from \"../../components/ProductList\";\n\nconst Products = props => (\n  <>\n    <h1>Products</h1>\n    <Route path=\"/products\" exact component={ProductList} />\n    <Route path=\"/products/:id\" exact component={Product} />\n  </>\n);\n\nexport default Products;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../src/pages/Home\";\nimport About from \"./pages/About\";\nimport Products from \"./pages/Products\";\n\nReactDOM.render(\n  <Router>\n    <App>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/products\" component={Products} />\n      </Switch>\n    </App>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}